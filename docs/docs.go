// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Tim Developer",
            "email": "support@example.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/appointment/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat janji temu antara mentee dan mentor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Buat Janji",
                "parameters": [
                    {
                        "description": "Appointment Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appointments.CreateAppointmentRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/appointment/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menampilkan semua appointment user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "List Appointment",
                "responses": {}
            }
        },
        "/appointment/update-status/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengubah status appointment (booking/scheduled/done)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Update Status Appointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Appointment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status Update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appointments.UpdateStatusRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login dan mendapatkan JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registrasi akun baru",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Register Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/education": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil data education user yang login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Education"
                ],
                "summary": "Ambil Education",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat education baru",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Education"
                ],
                "summary": "Create Education",
                "parameters": [
                    {
                        "description": "Education Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/educations.CreateEducationRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/experience": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil data Experience user yang login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experience"
                ],
                "summary": "Ambil Experience",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat experience baru",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experience"
                ],
                "summary": "Create Experience",
                "parameters": [
                    {
                        "description": "Experience Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/experiences.CreateExperienceRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/list-mentee": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menampilkan daftar mentee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentee"
                ],
                "summary": "List Mentee",
                "responses": {}
            }
        },
        "/list-mentor": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menampilkan daftar mentor",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentor"
                ],
                "summary": "List Mentor",
                "responses": {}
            }
        },
        "/mentee/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menampilkan detail mentee berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentee"
                ],
                "summary": "Detail Mentee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Mentee",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/mentor/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menampilkan detail mentor berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentor"
                ],
                "summary": "Detail Mentor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Mentor",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil data profile user yang login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Ambil Profile",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat profil baru",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Create Profile",
                "parameters": [
                    {
                        "description": "Profile Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profiles.CreateProfileRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/room/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat room meeting antara mentee dan mentor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room"
                ],
                "summary": "Buat Room Meeting",
                "parameters": [
                    {
                        "description": "Room Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rooms.CreateRoomRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menambahkan jadwal ketersediaan mentor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Buat Jadwal",
                "parameters": [
                    {
                        "description": "Schedule Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schedules.CreateScheduleRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus jadwal mentor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Hapus Jadwal",
                "parameters": [
                    {
                        "description": "Delete Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schedules.DeleteScheduleRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menampilkan semua jadwal yang dibuat",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "List Jadwal",
                "responses": {}
            }
        },
        "/schedule/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengubah jadwal ketersediaan mentor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Ubah Jadwal",
                "parameters": [
                    {
                        "description": "Update Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schedules.UpdateScheduleRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/wss": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Koneksi WebSocket untuk real-time communication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "WebSocket Endpoint",
                "responses": {
                    "200": {
                        "description": "Connected",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "appointments.CreateAppointmentRequest": {
            "type": "object",
            "properties": {
                "chellenge": {
                    "type": "string"
                },
                "id_mentor": {
                    "type": "integer"
                },
                "id_metee": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "objective": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.AppointmentStatus"
                }
            }
        },
        "appointments.UpdateStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/models.AppointmentStatus"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "educations.CreateEducationRequest": {
            "type": "object",
            "properties": {
                "end_year": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "university_name": {
                    "type": "string"
                }
            }
        },
        "experiences.CreateExperienceRequest": {
            "type": "object",
            "properties": {
                "achievement": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "current_position": {
                    "type": "string"
                },
                "skills": {
                    "type": "string"
                },
                "start_year": {
                    "type": "string"
                }
            }
        },
        "models.AppointmentStatus": {
            "type": "string",
            "enum": [
                "booking",
                "scheduled",
                "done"
            ],
            "x-enum-comments": {
                "StatusBooking": "Saat mentee baru membuat permintaan",
                "StatusDone": "Setelah meeting selesai",
                "StatusScheduled": "Setelah disetujui \u0026 dijadwalkan"
            },
            "x-enum-descriptions": [
                "Saat mentee baru membuat permintaan",
                "Setelah disetujui \u0026 dijadwalkan",
                "Setelah meeting selesai"
            ],
            "x-enum-varnames": [
                "StatusBooking",
                "StatusScheduled",
                "StatusDone"
            ]
        },
        "profiles.CreateProfileRequest": {
            "type": "object",
            "required": [
                "date_birth",
                "fullname"
            ],
            "properties": {
                "contact_person": {
                    "type": "string",
                    "maxLength": 100
                },
                "date_birth": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "is_mentor": {
                    "type": "boolean"
                },
                "profile_description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "profile_picture": {
                    "type": "string"
                }
            }
        },
        "rooms.CreateRoomRequest": {
            "type": "object",
            "required": [
                "room_name",
                "schedule_id"
            ],
            "properties": {
                "room_name": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                }
            }
        },
        "schedules.CreateScheduleRequest": {
            "type": "object",
            "properties": {
                "appointment_id": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "schedules.DeleteScheduleRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "schedules.UpdateScheduleRequest": {
            "type": "object",
            "properties": {
                "appointment_id": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Online Meeting API",
	Description:      "Ini adalah dokumentasi API untuk aplikasi online meeting.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
